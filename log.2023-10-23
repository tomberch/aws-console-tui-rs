2023-10-23T13:37:31.373898Z DEBUG Configuration: aws_console_tui: src/main.rs:43: CLI Commands {"logging.level":"DEBUG","logging.logFilePath":".","aws.endpoint":"http://localhost:4566"}
2023-10-23T13:37:31.373935Z DEBUG Configuration: aws_console_tui: src/main.rs:45: AppConfig { aws: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, logging: LoggingConfig { level: "DEBUG", log_file_path: ".", log_to_console: "" } }
2023-10-23T13:37:33.575680Z DEBUG build_profile_provider: hyper_rustls::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-rustls-0.24.1/src/config.rs:43: with_native_roots processed 144 valid and 0 invalid certs    
2023-10-23T13:37:33.576127Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}: aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T13:37:33.576241Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/config"
2023-10-23T13:37:33.576307Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/config" after="/home/thomas/.aws/config"
2023-10-23T13:37:33.576390Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/config") size=44
2023-10-23T13:37:33.576510Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/credentials"
2023-10-23T13:37:33.576564Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/credentials" after="/home/thomas/.aws/credentials"
2023-10-23T13:37:33.576609Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T13:37:33.577044Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:28: AWS Config for profile http://localhost:4566 = SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }
2023-10-23T13:37:33.593043Z DEBUG aws_sdk_sts::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/config.rs:713: using retry strategy with partition 'sts'
2023-10-23T13:37:33.593250Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T13:37:33.593323Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T13:37:33.593367Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T13:37:33.593379Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T13:37:33.593396Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T13:37:33.593433Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T13:37:33.593547Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T13:37:33.593587Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials:load_config_file{file=FilePath { kind: Credentials, path: "/home/thomas/.aws/credentials" }}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T13:37:33.593694Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000004", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T13:37:33.593712Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000004", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000004", secret_access_key: "** redacted **" })
2023-10-23T13:37:33.593737Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000004", secret_access_key: "** redacted **" }
2023-10-23T13:37:33.593753Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(234.72µs))
2023-10-23T13:37:33.593769Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T13:37:33.594147Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T13:37:33.594421Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T13:37:33.596917Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T13:37:33.597044Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to [::1]:4566
2023-10-23T13:37:33.597403Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 648 bytes
2023-10-23T13:37:33.663650Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T13:37:33.663703Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (400 bytes)
2023-10-23T13:37:33.663748Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T13:37:33.663916Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T13:37:33.664037Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T13:37:33.664147Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_sts::operation::get_caller_identity: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/operation/get_caller_identity.rs:152: request_id=None
2023-10-23T13:37:33.664213Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T13:37:33.664285Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T13:37:33.664300Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T13:37:33.664404Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:49: Caller Identity = AwsCallerIdentity { account: "000000000004", arn: "arn:aws:iam::000000000004:root", user_id: "AKIAIOSFODNN7EXAMPLE" }
2023-10-23T13:37:33.679105Z DEBUG aws_sdk_ec2::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/config.rs:742: using retry strategy with partition 'ec2'
2023-10-23T13:37:33.679337Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T13:37:33.679399Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T13:37:33.679442Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T13:37:33.679453Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T13:37:33.679469Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T13:37:33.679497Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T13:37:33.679616Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000004", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T13:37:33.679639Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000004", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000004", secret_access_key: "** redacted **" })
2023-10-23T13:37:33.679672Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000004", secret_access_key: "** redacted **" }
2023-10-23T13:37:33.679689Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(108.491µs))
2023-10-23T13:37:33.679707Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T13:37:33.679919Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T13:37:33.680113Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T13:37:33.680502Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T13:37:33.680643Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to [::1]:4566
2023-10-23T13:37:33.680957Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 661 bytes
2023-10-23T13:37:33.947386Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T13:37:33.947439Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (5210 bytes)
2023-10-23T13:37:33.947495Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T13:37:33.947609Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T13:37:33.947724Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T13:37:33.947842Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_ec2::operation::describe_regions: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/operation/describe_regions.rs:152: request_id=None
2023-10-23T13:37:33.948240Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T13:37:33.948321Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T13:37:33.948343Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T13:39:07.769575Z DEBUG aws_console_tui::state::actions::region_action_handler: src/state/actions/region_action_handler.rs:28: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Regions, active_profile: Some(Profile { name: "account04", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000004", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("eu-central-1") }), profile_state: ProfilesState { profile_names: ["default", "account04", "account02", "account03"], profiles: {} }, region_state: RegionsState { region_names: [] }, service_state: ServiceState { selected_service: None }, status_state: StatusState { action_pending: false, message: "Profile: account04, Account: 000000000004, User: AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "" } }
2023-10-23T13:58:31.983977Z DEBUG Configuration: aws_console_tui: src/main.rs:43: CLI Commands {"logging.level":"DEBUG","logging.logFilePath":".","aws.endpoint":"http://localhost:4566"}
2023-10-23T13:58:31.984016Z DEBUG Configuration: aws_console_tui: src/main.rs:45: AppConfig { aws: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, logging: LoggingConfig { level: "DEBUG", log_file_path: ".", log_to_console: "" } }
2023-10-23T13:58:33.686230Z DEBUG build_profile_provider: hyper_rustls::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-rustls-0.24.1/src/config.rs:43: with_native_roots processed 144 valid and 0 invalid certs    
2023-10-23T13:58:33.686790Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}: aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T13:58:33.686928Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/config"
2023-10-23T13:58:33.686993Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/config" after="/home/thomas/.aws/config"
2023-10-23T13:58:33.687080Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/config") size=44
2023-10-23T13:58:33.687214Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/credentials"
2023-10-23T13:58:33.687251Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/credentials" after="/home/thomas/.aws/credentials"
2023-10-23T13:58:33.687314Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T13:58:33.687729Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:28: AWS Config for profile http://localhost:4566 = SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }
2023-10-23T13:58:33.703734Z DEBUG aws_sdk_sts::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/config.rs:713: using retry strategy with partition 'sts'
2023-10-23T13:58:33.703952Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T13:58:33.704028Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T13:58:33.704092Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T13:58:33.704104Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T13:58:33.704122Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T13:58:33.704166Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T13:58:33.704287Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T13:58:33.704324Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials:load_config_file{file=FilePath { kind: Credentials, path: "/home/thomas/.aws/credentials" }}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T13:58:33.704436Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T13:58:33.704455Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" })
2023-10-23T13:58:33.704485Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }
2023-10-23T13:58:33.704503Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(247.982µs))
2023-10-23T13:58:33.704519Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T13:58:33.704891Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T13:58:33.705096Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T13:58:33.707662Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T13:58:33.707774Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to [::1]:4566
2023-10-23T13:58:33.708208Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 648 bytes
2023-10-23T13:58:33.711281Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T13:58:33.711307Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (400 bytes)
2023-10-23T13:58:33.711352Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T13:58:33.711408Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T13:58:33.711498Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T13:58:33.711585Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_sts::operation::get_caller_identity: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/operation/get_caller_identity.rs:152: request_id=None
2023-10-23T13:58:33.711649Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T13:58:33.711700Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T13:58:33.711715Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T13:58:33.711791Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:49: Caller Identity = AwsCallerIdentity { account: "000000000002", arn: "arn:aws:iam::000000000002:root", user_id: "AKIAIOSFODNN7EXAMPLE" }
2023-10-23T13:58:33.734935Z DEBUG aws_sdk_ec2::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/config.rs:742: using retry strategy with partition 'ec2'
2023-10-23T13:58:33.735321Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T13:58:33.735421Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T13:58:33.735492Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T13:58:33.735509Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T13:58:33.735532Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T13:58:33.735575Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T13:58:33.735757Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T13:58:33.735789Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" })
2023-10-23T13:58:33.735838Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }
2023-10-23T13:58:33.735865Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(155.893µs))
2023-10-23T13:58:33.735895Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T13:58:33.736240Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T13:58:33.736423Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T13:58:33.736793Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T13:58:33.736938Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to [::1]:4566
2023-10-23T13:58:33.737228Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 661 bytes
2023-10-23T13:58:33.741910Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T13:58:33.741943Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (5210 bytes)
2023-10-23T13:58:33.741979Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T13:58:33.743504Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T13:58:33.743604Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T13:58:33.743703Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_ec2::operation::describe_regions: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/operation/describe_regions.rs:152: request_id=None
2023-10-23T13:58:33.744037Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T13:58:33.744095Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T13:58:33.744112Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T13:58:40.391220Z DEBUG aws_console_tui::state::actions::region_action_handler: src/state/actions/region_action_handler.rs:28: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Regions, active_profile: Some(Profile { name: "account02", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000002", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("eu-west-2") }), profile_state: ProfilesState { profile_names: ["account04", "account02", "default", "account03"], profiles: {} }, region_state: RegionsState { region_names: [] }, service_state: ServiceState { selected_service: None }, status_state: StatusState { action_pending: false, message: "Profile: account02, Account: 000000000002, User: AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "" } }
2023-10-23T14:35:52.369668Z DEBUG Configuration: aws_console_tui: src/main.rs:43: CLI Commands {"aws.endpoint":"http://localhost:4566","logging.logFilePath":".","logging.level":"DEBUG"}
2023-10-23T14:35:52.369700Z DEBUG Configuration: aws_console_tui: src/main.rs:45: AppConfig { aws: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, logging: LoggingConfig { level: "DEBUG", log_file_path: ".", log_to_console: "" } }
2023-10-23T14:35:53.698014Z DEBUG build_profile_provider: hyper_rustls::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-rustls-0.24.1/src/config.rs:43: with_native_roots processed 144 valid and 0 invalid certs    
2023-10-23T14:35:53.698418Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}: aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T14:35:53.698519Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/config"
2023-10-23T14:35:53.698571Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/config" after="/home/thomas/.aws/config"
2023-10-23T14:35:53.698626Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/config") size=44
2023-10-23T14:35:53.698701Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/credentials"
2023-10-23T14:35:53.698732Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/credentials" after="/home/thomas/.aws/credentials"
2023-10-23T14:35:53.698766Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T14:35:53.699155Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:28: AWS Config for profile http://localhost:4566 = SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }
2023-10-23T14:35:53.715011Z DEBUG aws_sdk_sts::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/config.rs:713: using retry strategy with partition 'sts'
2023-10-23T14:35:53.715217Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T14:35:53.715291Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T14:35:53.715330Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T14:35:53.715344Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T14:35:53.715360Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T14:35:53.715400Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T14:35:53.715513Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T14:35:53.715549Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials:load_config_file{file=FilePath { kind: Credentials, path: "/home/thomas/.aws/credentials" }}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T14:35:53.715658Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T14:35:53.715679Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" })
2023-10-23T14:35:53.715707Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }
2023-10-23T14:35:53.715725Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(242.66µs))
2023-10-23T14:35:53.715744Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T14:35:53.716118Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T14:35:53.716371Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T14:35:53.718649Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T14:35:53.718760Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to 127.0.0.1:4566
2023-10-23T14:35:53.718868Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to 127.0.0.1:4566
2023-10-23T14:35:53.719264Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 648 bytes
2023-10-23T14:35:53.837203Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T14:35:53.837253Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (400 bytes)
2023-10-23T14:35:53.837290Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T14:35:53.837441Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T14:35:53.837565Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T14:35:53.837660Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_sts::operation::get_caller_identity: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/operation/get_caller_identity.rs:152: request_id=None
2023-10-23T14:35:53.837727Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T14:35:53.837792Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T14:35:53.837809Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T14:35:53.837897Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:49: Caller Identity = AwsCallerIdentity { account: "000000000002", arn: "arn:aws:iam::000000000002:root", user_id: "AKIAIOSFODNN7EXAMPLE" }
2023-10-23T14:35:53.851874Z DEBUG aws_sdk_ec2::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/config.rs:742: using retry strategy with partition 'ec2'
2023-10-23T14:35:53.852082Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T14:35:53.852138Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T14:35:53.852180Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T14:35:53.852196Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T14:35:53.852221Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T14:35:53.852252Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T14:35:53.852366Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T14:35:53.852389Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" })
2023-10-23T14:35:53.852436Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }
2023-10-23T14:35:53.852455Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(125.205µs))
2023-10-23T14:35:53.852475Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T14:35:53.852688Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T14:35:53.852895Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T14:35:53.853226Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T14:35:53.853343Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to 127.0.0.1:4566
2023-10-23T14:35:53.853424Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to 127.0.0.1:4566
2023-10-23T14:35:53.853643Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 661 bytes
2023-10-23T14:35:54.390332Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T14:35:54.390390Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (5210 bytes)
2023-10-23T14:35:54.390436Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T14:35:54.390596Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T14:35:54.390704Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T14:35:54.390813Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_ec2::operation::describe_regions: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/operation/describe_regions.rs:152: request_id=None
2023-10-23T14:35:54.391146Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T14:35:54.391205Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T14:35:54.391219Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T14:36:12.383593Z DEBUG aws_console_tui::state::actions::region_action_handler: src/state/actions/region_action_handler.rs:28: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Regions, active_profile: Some(Profile { name: "account02", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000002", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("eu-central-1") }), profile_state: ProfilesState { profile_names: ["default", "account02", "account03", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, service_state: ServiceState { selected_service: None }, status_state: StatusState { action_pending: false, message: "Profile: account02, Account: 000000000002, User: AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "" } }
2023-10-23T14:36:15.412456Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}: aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T14:36:15.412564Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/config"
2023-10-23T14:36:15.412605Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/config" after="/home/thomas/.aws/config"
2023-10-23T14:36:15.412667Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/config") size=44
2023-10-23T14:36:15.412744Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/credentials"
2023-10-23T14:36:15.412780Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/credentials" after="/home/thomas/.aws/credentials"
2023-10-23T14:36:15.412820Z DEBUG load_region{provider=ProfileFileRegionProvider { provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } }}:load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T14:36:15.413231Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:28: AWS Config for profile http://localhost:4566 = SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }
2023-10-23T14:36:15.432437Z DEBUG aws_sdk_sts::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/config.rs:713: using retry strategy with partition 'sts'
2023-10-23T14:36:15.432622Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T14:36:15.432693Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T14:36:15.432734Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T14:36:15.432755Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T14:36:15.432771Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T14:36:15.432794Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T14:36:15.432886Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T14:36:15.432936Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials:load_config_file{file=FilePath { kind: Credentials, path: "/home/thomas/.aws/credentials" }}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T14:36:15.433043Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000001", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T14:36:15.433062Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000001", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000001", secret_access_key: "** redacted **" })
2023-10-23T14:36:15.433090Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000001", secret_access_key: "** redacted **" }
2023-10-23T14:36:15.433108Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(237.819µs))
2023-10-23T14:36:15.433126Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T14:36:15.433333Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T14:36:15.433496Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T14:36:15.435921Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T14:36:15.436018Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to 127.0.0.1:4566
2023-10-23T14:36:15.436156Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to 127.0.0.1:4566
2023-10-23T14:36:15.436475Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 648 bytes
2023-10-23T14:36:15.500600Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T14:36:15.500642Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (400 bytes)
2023-10-23T14:36:15.500685Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T14:36:15.500892Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T14:36:15.500988Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T14:36:15.501078Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_sts::operation::get_caller_identity: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/operation/get_caller_identity.rs:152: request_id=None
2023-10-23T14:36:15.501141Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T14:36:15.501191Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T14:36:15.501203Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T14:36:15.501282Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:49: Caller Identity = AwsCallerIdentity { account: "000000000001", arn: "arn:aws:iam::000000000001:root", user_id: "AKIAIOSFODNN7EXAMPLE" }
2023-10-23T14:36:15.515183Z DEBUG aws_sdk_ec2::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/config.rs:742: using retry strategy with partition 'ec2'
2023-10-23T14:36:15.515367Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T14:36:15.515421Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T14:36:15.515457Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T14:36:15.515468Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T14:36:15.515482Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T14:36:15.515508Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T14:36:15.515616Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000001", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T14:36:15.515638Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000001", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000001", secret_access_key: "** redacted **" })
2023-10-23T14:36:15.515668Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000001", secret_access_key: "** redacted **" }
2023-10-23T14:36:15.515684Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(102.312µs))
2023-10-23T14:36:15.515701Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T14:36:15.515905Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T14:36:15.516078Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T14:36:15.516445Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T14:36:15.516599Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to 127.0.0.1:4566
2023-10-23T14:36:15.516678Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to 127.0.0.1:4566
2023-10-23T14:36:15.516877Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 661 bytes
2023-10-23T14:36:15.640758Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T14:36:15.640799Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (5210 bytes)
2023-10-23T14:36:15.640833Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T14:36:15.640945Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T14:36:15.641060Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T14:36:15.641166Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_ec2::operation::describe_regions: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/operation/describe_regions.rs:152: request_id=None
2023-10-23T14:36:15.641469Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T14:36:15.641521Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T14:36:15.641538Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T18:51:51.624517Z DEBUG Configuration: aws_console_tui: src/main.rs:43: CLI Commands {"aws.endpoint":"http://localhost:4566","logging.level":"DEBUG","logging.logFilePath":"."}
2023-10-23T18:51:51.624558Z DEBUG Configuration: aws_console_tui: src/main.rs:45: AppConfig { aws: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, logging: LoggingConfig { level: "DEBUG", log_file_path: ".", log_to_console: "" } }
2023-10-23T18:51:53.263452Z DEBUG build_profile_provider: hyper_rustls::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-rustls-0.24.1/src/config.rs:43: with_native_roots processed 144 valid and 0 invalid certs    
2023-10-23T18:51:53.263722Z DEBUG aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T18:51:53.263774Z DEBUG load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/config"
2023-10-23T18:51:53.263808Z DEBUG load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/config" after="/home/thomas/.aws/config"
2023-10-23T18:51:53.263839Z DEBUG load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/config") size=44
2023-10-23T18:51:53.263879Z DEBUG load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/credentials"
2023-10-23T18:51:53.263893Z DEBUG load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/credentials" after="/home/thomas/.aws/credentials"
2023-10-23T18:51:53.263912Z DEBUG load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T18:51:53.264120Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:28: AWS Config for profile http://localhost:4566 = SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }
2023-10-23T18:51:53.280279Z DEBUG aws_sdk_sts::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/config.rs:713: using retry strategy with partition 'sts'
2023-10-23T18:51:53.280504Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T18:51:53.280580Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T18:51:53.280624Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T18:51:53.280636Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T18:51:53.280654Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T18:51:53.280694Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T18:51:53.280812Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T18:51:53.280859Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials:load_config_file{file=FilePath { kind: Credentials, path: "/home/thomas/.aws/credentials" }}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T18:51:53.281027Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T18:51:53.281054Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" })
2023-10-23T18:51:53.281126Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }
2023-10-23T18:51:53.281170Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(386.976µs))
2023-10-23T18:51:53.281204Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T18:51:53.281741Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T18:51:53.282025Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T18:51:53.285062Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T18:51:53.285171Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to 127.0.0.1:4566
2023-10-23T18:51:53.285293Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to 127.0.0.1:4566
2023-10-23T18:51:53.285644Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 648 bytes
2023-10-23T18:51:53.355699Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T18:51:53.355749Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (400 bytes)
2023-10-23T18:51:53.355812Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T18:51:53.355961Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T18:51:53.356085Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T18:51:53.356198Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_sts::operation::get_caller_identity: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/operation/get_caller_identity.rs:152: request_id=None
2023-10-23T18:51:53.356284Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T18:51:53.356357Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T18:51:53.356373Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T18:51:53.356462Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:49: Caller Identity = AwsCallerIdentity { account: "000000000002", arn: "arn:aws:iam::000000000002:root", user_id: "AKIAIOSFODNN7EXAMPLE" }
2023-10-23T18:51:53.372640Z DEBUG aws_sdk_ec2::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/config.rs:742: using retry strategy with partition 'ec2'
2023-10-23T18:51:53.373022Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T18:51:53.373156Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T18:51:53.373219Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T18:51:53.373255Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T18:51:53.373296Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T18:51:53.373342Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T18:51:53.373503Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T18:51:53.373532Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" })
2023-10-23T18:51:53.373578Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000002", secret_access_key: "** redacted **" }
2023-10-23T18:51:53.373603Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(144.599µs))
2023-10-23T18:51:53.373632Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T18:51:53.373926Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T18:51:53.374063Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T18:51:53.374529Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T18:51:53.374687Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to 127.0.0.1:4566
2023-10-23T18:51:53.374780Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to 127.0.0.1:4566
2023-10-23T18:51:53.375077Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 661 bytes
2023-10-23T18:51:53.804599Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T18:51:53.804676Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (5210 bytes)
2023-10-23T18:51:53.804718Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T18:51:53.804818Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T18:51:53.804948Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T18:51:53.805069Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_ec2::operation::describe_regions: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/operation/describe_regions.rs:152: request_id=None
2023-10-23T18:51:53.805394Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T18:51:53.805460Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T18:51:53.805475Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T18:52:01.955093Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:36: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account02", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000002", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: CloudWatchLogs }), profile_state: ProfilesState { profile_names: ["test", "account02", "account03", "default", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: true, message: "Pending action. Please wait ...", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:52:07.574052Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:36: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account02", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000002", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: DynamoDB }), profile_state: ProfilesState { profile_names: ["test", "account02", "account03", "default", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: true, message: "Pending action. Please wait ...", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:52:08.487545Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:36: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account02", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000002", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: Eks }), profile_state: ProfilesState { profile_names: ["test", "account02", "account03", "default", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: true, message: "Pending action. Please wait ...", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:52:09.443664Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:36: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account02", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000002", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: CloudWatchLogs }), profile_state: ProfilesState { profile_names: ["test", "account02", "account03", "default", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: true, message: "Pending action. Please wait ...", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:52:10.469856Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:36: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account02", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000002", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: S3 }), profile_state: ProfilesState { profile_names: ["test", "account02", "account03", "default", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: true, message: "Pending action. Please wait ...", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:52:11.538974Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:36: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account02", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000002", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: CloudWatchLogs }), profile_state: ProfilesState { profile_names: ["test", "account02", "account03", "default", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: true, message: "Pending action. Please wait ...", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:55:37.905091Z DEBUG Configuration: aws_console_tui: src/main.rs:43: CLI Commands {"logging.level":"DEBUG","aws.endpoint":"http://localhost:4566","logging.logFilePath":"."}
2023-10-23T18:55:37.905128Z DEBUG Configuration: aws_console_tui: src/main.rs:45: AppConfig { aws: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, logging: LoggingConfig { level: "DEBUG", log_file_path: ".", log_to_console: "" } }
2023-10-23T18:55:39.278475Z DEBUG build_profile_provider: hyper_rustls::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-rustls-0.24.1/src/config.rs:43: with_native_roots processed 144 valid and 0 invalid certs    
2023-10-23T18:55:39.278897Z DEBUG aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T18:55:39.278973Z DEBUG load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/config"
2023-10-23T18:55:39.279025Z DEBUG load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/config" after="/home/thomas/.aws/config"
2023-10-23T18:55:39.279095Z DEBUG load_config_file{file=Default(Config)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/config") size=44
2023-10-23T18:55:39.279204Z DEBUG load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:172: performing home directory substitution home="/home/thomas" path="~/.aws/credentials"
2023-10-23T18:55:39.279249Z DEBUG load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:102: home directory expanded before="~/.aws/credentials" after="/home/thomas/.aws/credentials"
2023-10-23T18:55:39.279307Z DEBUG load_config_file{file=Default(Credentials)}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T18:55:39.279697Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:28: AWS Config for profile http://localhost:4566 = SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }
2023-10-23T18:55:39.295946Z DEBUG aws_sdk_sts::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/config.rs:713: using retry strategy with partition 'sts'
2023-10-23T18:55:39.296197Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T18:55:39.296288Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T18:55:39.296332Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T18:55:39.296344Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T18:55:39.296360Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T18:55:39.296403Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T18:55:39.296524Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::fs_util: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/fs_util.rs:26: loaded home directory src="HOME"
2023-10-23T18:55:39.296565Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials:load_config_file{file=FilePath { kind: Credentials, path: "/home/thomas/.aws/credentials" }}: aws_config::profile::parser::source: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/parser/source.rs:149: config file loaded path=Some("/home/thomas/.aws/credentials") size=297
2023-10-23T18:55:39.296684Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000003", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T18:55:39.296704Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000003", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000003", secret_access_key: "** redacted **" })
2023-10-23T18:55:39.296735Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000003", secret_access_key: "** redacted **" }
2023-10-23T18:55:39.296753Z  INFO invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(262.316µs))
2023-10-23T18:55:39.296771Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T18:55:39.297187Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T18:55:39.297386Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T18:55:39.300094Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T18:55:39.300300Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to 127.0.0.1:4566
2023-10-23T18:55:39.300415Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to 127.0.0.1:4566
2023-10-23T18:55:39.300717Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 648 bytes
2023-10-23T18:55:39.371257Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T18:55:39.371308Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (400 bytes)
2023-10-23T18:55:39.371367Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T18:55:39.371583Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T18:55:39.371703Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T18:55:39.371815Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_sts::operation::get_caller_identity: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-sts-0.33.0/src/operation/get_caller_identity.rs:152: request_id=None
2023-10-23T18:55:39.371895Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T18:55:39.371949Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T18:55:39.371978Z DEBUG invoke{service=sts operation=GetCallerIdentity}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T18:55:39.372061Z DEBUG aws_console_tui::repository::login: src/repository/login.rs:49: Caller Identity = AwsCallerIdentity { account: "000000000003", arn: "arn:aws:iam::000000000003:root", user_id: "AKIAIOSFODNN7EXAMPLE" }
2023-10-23T18:55:39.386350Z DEBUG aws_sdk_ec2::config: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/config.rs:742: using retry strategy with partition 'ec2'
2023-10-23T18:55:39.386547Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:227: entering 'serialization' phase
2023-10-23T18:55:39.386604Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:238: entering 'before transmit' phase
2023-10-23T18:55:39.386642Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:195: no client rate limiter configured, so no token is required for the initial request.
2023-10-23T18:55:39.386653Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:241: retry strategy has OKed initial request
2023-10-23T18:55:39.386685Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:282: beginning attempt #1
2023-10-23T18:55:39.386716Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime::client::orchestrator::endpoints: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator/endpoints.rs:130: will use endpoint Endpoint { url: "http://localhost:4566", headers: {}, properties: {} }
2023-10-23T18:55:39.386848Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:462: constructed abstract provider from config file chain=ProfileChain { base: AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000003", secret_access_key: "** redacted **" }), chain: [] }
2023-10-23T18:55:39.386872Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials::exec: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials/exec.rs:138: first credentials will be loaded from AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000003", secret_access_key: "** redacted **" }) base=AccessKey(Credentials { provider_name: "ProfileFile", access_key_id: "000000000003", secret_access_key: "** redacted **" })
2023-10-23T18:55:39.386903Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_config::profile::credentials: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-config-0.56.1/src/profile/credentials.rs:175: loaded base credentials creds=Credentials { provider_name: "ProfileFile", access_key_id: "000000000003", secret_access_key: "** redacted **" }
2023-10-23T18:55:39.386927Z  INFO invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:lazy_load_credentials: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:112: credentials cache miss occurred; added new AWS credentials (took Ok(113.086µs))
2023-10-23T18:55:39.386946Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_credential_types::cache::lazy_caching: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-credential-types-0.56.1/src/cache/lazy_caching.rs:124: loaded credentials
2023-10-23T18:55:39.387173Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:258: entering 'transmit' phase
2023-10-23T18:55:39.387273Z DEBUG hyper::client::connect::dns: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/dns.rs:122: resolving host="localhost"
2023-10-23T18:55:39.387793Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to [::1]:4566
2023-10-23T18:55:39.387935Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:537: connecting to 127.0.0.1:4566
2023-10-23T18:55:39.388066Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: hyper::client::connect::http: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/client/connect/http.rs:540: connected to 127.0.0.1:4566
2023-10-23T18:55:39.388368Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:342: flushed 661 bytes
2023-10-23T18:55:39.450367Z DEBUG hyper::proto::h1::io: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/io.rs:207: parsed 9 headers
2023-10-23T18:55:39.450451Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:222: incoming body is content-length (5210 bytes)
2023-10-23T18:55:39.450492Z DEBUG hyper::proto::h1::conn: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/hyper-0.14.27/src/proto/h1/conn.rs:298: incoming body completed
2023-10-23T18:55:39.450658Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:269: entering 'before deserialization' phase
2023-10-23T18:55:39.450756Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:288: entering 'deserialization' phase
2023-10-23T18:55:39.450848Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt:deserialization:deserialize_nonstreaming: aws_sdk_ec2::operation::describe_regions: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-sdk-ec2-0.33.1/src/operation/describe_regions.rs:152: request_id=None
2023-10-23T18:55:39.451153Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op:try_attempt: aws_smithy_runtime_api::client::interceptors::context: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-api-0.56.1/src/client/interceptors/context.rs:299: entering 'after deserialization' phase
2023-10-23T18:55:39.451206Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::retries::strategy::standard: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/retries/strategy/standard.rs:213: request succeeded, no retry necessary
2023-10-23T18:55:39.451219Z DEBUG invoke{service=ec2 operation=DescribeRegions}:try_op: aws_smithy_runtime::client::orchestrator: /home/thomas/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aws-smithy-runtime-0.56.1/src/client/orchestrator.rs:305: a retry is either unnecessary or not possible, exiting attempt loop
2023-10-23T18:55:42.547617Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:32: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account03", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000003", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: CloudWatchLogs }), profile_state: ProfilesState { profile_names: ["test", "account03", "default", "account02", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: false, message: "Profile: account03, Account: 000000000003, User: AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:55:46.329143Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:32: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account03", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000003", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: DynamoDB }), profile_state: ProfilesState { profile_names: ["test", "account03", "default", "account02", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: false, message: "Profile: account03, Account: 000000000003, User: AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:55:47.611937Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:32: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account03", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000003", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: CloudWatchLogs }), profile_state: ProfilesState { profile_names: ["test", "account03", "default", "account02", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: false, message: "Profile: account03, Account: 000000000003, User: AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:55:49.236791Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:32: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account03", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000003", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: Eks }), profile_state: ProfilesState { profile_names: ["test", "account03", "default", "account02", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: false, message: "Profile: account03, Account: 000000000003, User: AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:55:50.177658Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:32: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account03", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000003", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: CloudWatchLogs }), profile_state: ProfilesState { profile_names: ["test", "account03", "default", "account02", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: false, message: "Profile: account03, Account: 000000000003, User: AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:55:51.259560Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:32: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account03", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000003", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: S3 }), profile_state: ProfilesState { profile_names: ["test", "account03", "default", "account02", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: false, message: "Profile: account03, Account: 000000000003, User: AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "" } }
2023-10-23T18:55:52.335417Z DEBUG aws_console_tui::state::actions::service_action_handler: src/state/actions/service_action_handler.rs:32: AppState { aws_config: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, focus_component: Services, active_profile: Some(Profile { name: "account03", sdk_config: SdkConfig { app_name: None, credentials_cache: Some(CredentialsCache { inner: Lazy(Builder { sleep: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SystemTimeSource)), load_timeout: None, buffer_time: None, buffer_time_jitter_fraction: None, default_credential_expiration: None }) }), credentials_provider: Some(SharedCredentialsProvider(ProfileFileCredentialsProvider { factory: NamedProviderFactory { providers: {"ec2instancemetadata": ImdsCredentialsProvider { client: LazyClient { client: OnceCell { value: None }, builder: Builder { max_attempts: None, endpoint: None, mode_override: None, token_ttl: None, connect_timeout: None, read_timeout: None, config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }) } }, env: Env(Real), profile: None, time_source: SharedTimeSource(SystemTimeSource), last_retrieved_credentials: RwLock { data: None, poisoned: false, .. } }, "environment": EnvironmentVariableCredentialsProvider { env: Env(Real) }, "ecscontainer": EcsCredentialsProvider { inner: OnceCell { value: None }, env: Env(Real), builder: Builder { provider_config: Some(ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None }), dns: None, connect_timeout: None, read_timeout: None } }} }, sts_config: Builder { config: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::region::Region"), TypeErasedBox[Clone]:Set(Prebuilt(DynConnector))] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_connector: None, endpoint_resolver: None, auth_schemes: [], identity_resolvers: [], interceptors: [], retry_classifiers: None, retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(TokioSleep) }) }, runtime_plugins: [] }, provider_config: ProviderConfig { env: Env(Real), fs: Fs(Real), sleep: Some(SharedAsyncSleep(TokioSleep)), region: None } })), region: Some(Region("us-east-1")), endpoint_url: Some("http://localhost:4566"), retry_config: Some(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), sleep_impl: Some(SharedAsyncSleep(TokioSleep)), time_source: Some(SharedTimeSource(SharedTimeSource(SystemTimeSource))), timeout_config: Some(TimeoutConfig { connect_timeout: Some(3.1s), read_timeout: None, operation_timeout: None, operation_attempt_timeout: None }), http_connector: Some(ConnectorFn(<function pointer>)), use_fips: None, use_dual_stack: None }, account: "000000000003", user: "AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "", regions: ["af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-south-2", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ap-southeast-4", "ca-central-1", "eu-central-1", "eu-central-2", "eu-north-1", "eu-south-1", "eu-south-2", "eu-west-1", "eu-west-2", "eu-west-3", "il-central-1", "me-central-1", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "us-gov-east-1", "us-gov-west-1", "cn-north-1", "cn-northwest-1"], selected_region: Some("us-east-1"), selected_service: CloudWatchLogs }), profile_state: ProfilesState { profile_names: ["test", "account03", "default", "account02", "account04"], profiles: {} }, region_state: RegionsState { region_names: [] }, status_state: StatusState { action_pending: false, message: "Profile: account03, Account: 000000000003, User: AKIAIOSFODNN7EXAMPLE", err_message: "", err_message_backtrace: "" } }
2023-10-23T19:08:26.109421Z DEBUG Configuration: aws_console_tui: src/main.rs:43: CLI Commands {"aws.endpoint":"http://localhost:4566","logging.level":"DEBUG","logging.logFilePath":"."}
2023-10-23T19:08:26.109459Z DEBUG Configuration: aws_console_tui: src/main.rs:45: AppConfig { aws: AWSConfig { credentials_path: "/home/thomas/.aws/credentials", profiles: [], regions: [], services: [], endpoint: "http://localhost:4566" }, logging: LoggingConfig { level: "DEBUG", log_file_path: ".", log_to_console: "" } }
